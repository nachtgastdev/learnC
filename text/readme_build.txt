Сборка и компиляция программ на С. (Все делается в консоле)

1. Создаем файл с кодом (напр. main.c)
2. Компилируем:	gcc -o <fileName> <main.c> // При этом создается
исполняемый файл fileName, чтобы его запустить: ./fileName

/*
Как вообще происходит процесс создания исполняемого файла из файла 
(файлов) с исходным кодом?

Первый этап – это трансляция, которая превращает исходный код в 
объектный, и создаётся файл (или несколько файлов) с расширением -o.

Второй этап – это компоновка или линковка. На данном этапе объектный
 файл (или несколько) компонуется (компонуются) в один исполняемый файл.

Причём первый этап мы можем разбить на несколько этапов, так как т
рансляция тоже происходит не единовременно. Сначала происходит 
препроцессинг, где в одно целое собирается весь исходный код, в том 
числе код из подключенных файлов с помощью директивы #include. Далее 
идёт создание ассемблерного файла (или нескольких), а уже затем из а
ссемблерного файла (или нескольких) формируется объектный файл (или 
несколько).

Давайте попробуем теперь наш исполняемый файл создать в несколько 
этапов, благо нам это сделать MinGW вполне позволяет.

1- gcc -E main.c >> main.i // создается файл main.i где собирается 
исходный код в месте с кодом из подключаемых через #include файлов.

2- gcc -S main.i -o main.s // создаем из main.i ассемблерный файл main.s

3- gcc -c main.s // непосредственно компиляция, создается объектный файл
main.o (если запускать без -о имя будет таким же как у файла .s

4-gcc -o myprog main.o // линковка т.е создаем из объектного (или 
нескольких объектных) файла исполняемый файл myprog 


*/

/*
						Пример создания файла build.sh(не забыть сделать исполняемым)
gcc -Wall -E printF.c -o printF.i
gcc -Wall -S printF.i -o printF.s
gcc -Wall -c printF.s
gcc -Wall -o printFProg printF.o
*/
